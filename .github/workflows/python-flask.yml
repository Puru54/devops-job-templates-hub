name: Python Flask CI

# Trigger the workflow on push and pull requests to any branch
on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  build-and-test:
    # Run the CI job on the latest Ubuntu runner
    runs-on: ubuntu-latest
    
    strategy:
      # Test against multiple Python versions
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]
    
    steps:
    # Step 1: Check out the repository code
    - name: Checkout repository
      uses: actions/checkout@v3
      
    # Step 2: Set up Python with the specified version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Cache pip dependencies to speed up workflow runs
    
    # Step 3: Install dependencies from requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov flake8 # Install testing tools
    
    # Step 4: Run linting with flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # Step 5: Run unit tests with pytest
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
    
    # Step 6: Upload coverage report as an artifact (optional)
    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.xml
        retention-days: 5
